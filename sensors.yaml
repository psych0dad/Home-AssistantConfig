- platform: yr
- platform: deutsche_bahn
  from: Linden-Mitte, Bochum
  to: Bochum Hbf
- platform: deutsche_bahn
  from: Linden-Mitte, Bochum
  to: Bochum-Dahlhausen
- platform: deutsche_bahn
  from: Linden-Mitte, Bochum
  to: Hattingen(Ruhr)
- platform: deutsche_bahn
  from: Linden-Mitte, Bochum
  to: Essen Hbf
- platform: darksky
  api_key: !secret darksky
  update_interval:
    minutes: 5
  monitored_conditions:
    - summary
    - icon
    - temperature
    - humidity
    - precip_probability
    - precip_intensity
    - wind_speed
    - pressure
    - wind_bearing
    - apparent_temperature
- platform: google_travel_time
  api_key: !secret google_travel_time
  origin: zone.home
  destination: zone.work_bernd
- platform: template
  sensors:
    next_departure_bochum_hbf:
      value_template: '{{ states.sensor.lindenmitte_bochum_to_bochum_hbf.attributes.next }}'
      friendly_name: 'Bochum Hbf'
    next_departure_bochum_dahlhausen:
      value_template: '{{ states.sensor.lindenmitte_bochum_to_bochumdahlhausen.attributes.next }}'
      friendly_name: 'Bochum-Dahlhausen'
    next_departure_hattingen:
      value_template: '{{ states.sensor.lindenmitte_bochum_to_hattingenruhr.attributes.next }}'
      friendly_name: 'Hattingen'
    next_departure_essen_hbf:
      value_template: '{{ states.sensor.lindenmitte_bochum_to_bochum_hbf.attributes.next }}'
      friendly_name: 'Essen Hbf'
# template for hue wakeup light
- platform: template
  sensors:
    wakeup_alarm_time:
      friendly_name: 'Alarm time'
      value_template: '{% if states.input_slider.wakeup_hour.state|length == 3 %}0{% endif %}{{ states.input_slider.wakeup_hour.state | int }}:{% if states.input_slider.wakeup_minutes.state|length == 3 %}0{% endif %}{{ states.input_slider.wakeup_minutes.state | int }}'
- platform: template
  sensors:
    wakeup_start_time_lights:
      friendly_name: 'Fade-in start time'
      value_template: >
        {% if states.wakeup_alarm_time and states.input_slider.wakeup_duration %}
        {% set alarmtime = states.sensor.wakeup_alarm_time.state %}
        {% set alarm_hour = alarmtime.split(":")[0] | int %}
        {% set alarm_min = alarmtime.split(":")[1] | int %}
        {% set light_dur = states.input_slider.wakeup_duration.state | int %}
        {% set alarm_min_light = alarm_min - light_dur %}
        {% if alarm_min_light  < 0 %}
        {% set alarm_min_light = alarm_min_light + 60 %}
        {% set alarm_hour_light = alarm_hour - 1 %}
        {% if alarm_hour_light < 0 %}{% set alarm_hour_light = 23 %}{% endif %}
        {% if alarm_hour_light < 10 %}0{% endif %}{{ alarm_hour_light}}:{% if alarm_min_light < 10 %}0{% endif %}{{ alarm_min_light }}
        {% else %}
        {% if alarm_hour < 10 %}0{% endif %}{{ alarm_hour }}:{% if alarm_min_light < 10 %}0{% endif %}{{ alarm_min_light }}
        {% endif %}
        {% endif %}
- platform: template
  sensors:
    wakeup_fadein_duration:
      friendly_name: 'Fade-in duration'
      value_template: '{{ states.input_slider.wakeup_duration.state | int }}'
      unit_of_measurement: 'min'
